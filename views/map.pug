extends layout

block content
  link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css")
  link(rel="stylesheet", href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css")

  .container.mt-5
    .d-flex.justify-content-between.align-items-center.mb-4
      h2 All Smart Objects on the Map
      a.btn.btn-secondary(href="/dashboard") ← Back to Dashboard

    #map(style="height: 600px;")

  script(src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js")
  script.
    const map = L.map('map').setView([20, 0], 2);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);

    const objects = !{JSON.stringify(smartObjects)};
    
    objects.forEach(obj => {
        if (obj.reallatitude !== null && obj.reallongitude !== null) {
        const color = obj.remainingBags < 10 ? 'red' : 'blue';
        const markerIcon = L.divIcon({
            className: 'custom-marker',
            html: `<div style="
            background-color: ${color};
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 2px solid white;"></div>`,
            iconSize: [20, 20],
            iconAnchor: [10, 10]
        });

        L.marker([obj.reallatitude, obj.reallongitude], { icon: markerIcon })
            .addTo(map)
            .bindPopup(`${obj.fullAddress || 'Unknown'}<br>Remaining Bags: ${obj.remainingBags}`);
        }
    });
    // Pega o valor de ?focus=lat,lon na URL
    const params = new URLSearchParams(window.location.search);
    const focus = params.get('focus');

    if (focus) {
    const [lat, lon] = focus.split(',').map(parseFloat);
    if (!isNaN(lat) && !isNaN(lon)) {
        map.setView([lat, lon], 15); // zoom 15 para focar bem no local
        L.marker([lat, lon]).addTo(map);
    }
    }
